apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitlab
  namespace: gitlab
spec:
  interval: 1h
  chart:
    spec:
      chart: gitlab
      version: 9.2.1
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-system
      interval: 1h
  values:
    global:
      gitlabBase:
        image:
          repository: ghcr.io/vaskozl/gitlab-base
          tag: 18.2.1@sha256:ce21f454e1c3c273aa75f8c82e58f75b467fb898155c7e32505ec43e62fc16a3
      certificates:
        image:
          repository: ghcr.io/vaskozl/gitlab-certificates
          tag: 18.2.1@sha256:68fb36f8b0b68319f2f22e6536b4a18bdfbba1803d8e32181c7c4c43f960acaa
      extraEnv:
        GITLAB_LOG_LEVEL: 'error'
        GITLAB_LOGGER_TRUNCATE_LOGS: true
      nodeSelector:
        kubernetes.io/arch: amd64
      edition: ce
      hosts:
        domain: sko.ai
      ingress:
        class: &class haproxy-internal
        provider: *class
        # Wildcard is configured by default
        configureCertmanager: false
        # TLS is enabled by default
        tls:
          enabled: false
      kas:
        enabled: false
      pages:
        enabled: true
      email:
        display_name: 'GitLab'
        from: 'gitlab@sko.ai'
        reply_to: 'noreply@sko.ai'
      smtp:
        enabled: true
        address: 'mail.sko.ai'
        port: 2225
        tls: false
        authentication: ''
      redis:
        host: gitlab-redis
        auth:
          secret: gitlab-redis-secret
          key: secret
      minio:
        enabled: false
      appConfig:
        omniauth:
          enabled: true
          autoSignInWithProvider: []
          syncProfileFromProvider: [openid_connect]
          allowSingleSignOn: [openid_connect]
          allowBypassTwoFactor: [openid_connect]
          syncProfileAttributes: [email]
          blockAutoCreatedUsers: false
          providers:
            - secret: authelia-oauth2
        lfs: &rails
          connection:
            secret: object-storage
            key: rails.minio.yaml
        artifacts: *rails
        uploads: *rails
        packages: *rails
        externalDiffs: *rails
        terraformState: *rails
        dependencyProxy: *rails
        ciSecureFiles: *rails
    # Reduce memory usage
    gitlab:
      gitlab-exporter:
        image:
          repository: ghcr.io/vaskozl/gitlab-exporter
          tag: 18.2.1@sha256:4aa1f5939ef45a38671eacc165849ea729649bc8594de96b71c1510ca993dc50
      gitaly:
        image:
          repository: ghcr.io/vaskozl/gitaly
          tag: 18.2.1@sha256:312140fb0d6f5be1065ccec0e77a3026a3ef277e52ecf865e3dd867588734040
        resources:
          requests:
            cpu: 80m
            memory: 660M
          limits:
            memory: 660M
      webservice:
        minReplicas: 1
        maxReplicas: 2
        # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/examples/ref/2k.yaml
        workerProcesses: 1
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 2Gi
      sidekiq:
        minReplicas: 1
        maxReplicas: 2
      gitlab-shell:
        image:
          repository: ghcr.io/vaskozl/gitlab-shell
          tag: 18.2.1@sha256:d20f0c0250bbf231b554459c668b27f0d8b93e490cf3d51556ce808b9e5311db
        minReplicas: 1
        maxReplicas: 2
      gitlab-pages:
        image:
          repository: ghcr.io/vaskozl/gitlab-pages
          tag: 18.2.1@sha256:22b6f791840b7454871b8df6a039cd915c672dc45df92b3ff9dfd6a7c1072486
        # The default requests are massive for a static server
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
      toolbox:
        backups:
          objectStorage:
            config:
              secret: object-storage
              key: toolbox.minio.toml
    registry:
      image:
        repository: ghcr.io/vaskozl/gitlab-container-registry
        tag: 18.2.1@sha256:4df9cb91644d4fd1260b690031ea7c2a4af6be39c8631d316f5003395c902ed2
      ingress:
        annotations:
          haproxy.org/timeout-server: 600s
      storage:
        secret: object-storage
        key: registry.minio.yaml
    # Disable things we handle by ourselves
    certmanager:
      install: false
    nginx-ingress:
      enabled: false
    prometheus:
      install: false
    grafana:
      enabled: false
    gitlab-runner:
      concurrent: 1
      runners:
        nodeSelector:
          kubernetes.io/arch: amd64
        config: |
          [[runners]]
            [runners.kubernetes]
              helper_image = "ghcr.io/vaskozl/gitlab-runner-helper:18.2.1@sha256:f34163a3431eaa1cc10a1b1bc1e62ff3f74314ff70036b4324f826c1e2e738cc"
              cpu_request = "500m"
              cpu_limit = "1"
              memory_request = "300Mi"
              memory_limit = "2Gi"
              service_cpu_request = "100m"
              service_cpu_limit = "1"
              service_memory_request = "50Mi"
              service_memory_limit = "1Gi"
              helper_cpu_request = "5m"
              helper_cpu_limit = "500m"
              helper_memory_request = "50Mi"
              helper_memory_limit = "200Mi"
              [runners.kubernetes.node_selector]
                "kubernetes.io/arch" = "amd64"
      image:
        registry: ghcr.io
        image: vaskozl/gitlab-runner
        tag: 18.2.1@sha256:ab3d93cbe4ec55b8713430f931a3f021de99c3c833c504941577c003fc655674
    redis:
      install: false
  postRenderers:
    - kustomize:
        patches:
          - patch: |-
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: dummy-app
              spec:
                template:
                  spec:
                    nodeSelector:
                      kubernetes.io/arch: amd64
            target:
              kind: Deployment
          - patch: |-
              apiVersion: apps/v1
              kind: StatefulSet
              metadata:
                name: dummy-app
              spec:
                template:
                  spec:
                    nodeSelector:
                      kubernetes.io/arch: amd64
            target:
              kind: StatefulSet
