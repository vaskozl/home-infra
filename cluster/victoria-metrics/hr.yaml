---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vm
  namespace: victoria-metrics
spec:
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: '0.17.7'
      sourceRef:
        kind: HelmRepository
        name: vm-charts
        namespace: flux-system
  interval: 1h0m0s
  targetNamespace: victoria-metrics
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  valuesFrom:
  - kind: Secret
    name: vm-secrets
  values:
    fullnameOverride: stack
    experimentalDashboardsEnabled: false
    grafana:
      ingress:
        enabled: true
        hosts:
        - gf.sko.ai
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          searchNamespace: ALL
      grafana.ini:
        auth.anonymous:
          enabled: true
          org_role: Editor
    alertmanager:
      ingress:
        enabled: true
        hosts:
        - am.sko.ai
      spec:
        externalURL: "https://am.sko.ai"
      config:
        route:
          routes:
          - match:
              alertname: 'Watchdog'
            receiver: 'devnull'
          - match:
              alertname: 'InfoInhibitor'
            receiver: 'devnull'
          - matchers:
            - severity=~"warning|critical"
            receiver: slack-monitoring
        receivers:
        - name: 'devnull'
        - name: "slack-monitoring"
          slack_configs:
          - channel: "#alerts"
            send_resolved: true
            title: '{{ template "slack.monzo.title" . }}'
            icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
            color: '{{ template "slack.monzo.color" . }}'
            text: '{{ template "slack.monzo.text" . }}'
    vmsingle:
      spec:
        retentionPeriod: "30d"
        storage:
          resources:
            requests:
              storage: 22Gi
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 1
            memory: 960Mi
      ingress:
        enabled: true
        hosts:
        - vms.sko.ai
    vmalert:
      ingress:
        enabled: true
        hosts:
        - va.sko.ai
    vmagent:
      spec:
        scrapeInterval: 60s
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 100Mi
      ingress:
        enabled: true
        hosts:
        - vm.sko.ai
    kubelet:
      spec:
        interval: 60s
        # drop high cardinality label and useless metrics for cadvisor and kubelet
        metricRelabelConfigs:
        - action: labeldrop
          regex: (uid|pod_uid)
        - action: labeldrop
          regex: (id|name)
        - action: drop
          source_labels: [__name__]
          regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
        # Random calico interfaces
        - action: labeldrop
          regex: (interface)
        # Not used by any rules/graphs but very high cardinality for our setups
        - action: drop
          source_labels: [__name__]
          regex: (container_tasks_state|container_memory_failures_total)
        - action: drop
          source_labels: [__name__]
          regex: (container_blkio_device_usage_total)
        relabelConfigs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
        - targetLabel: "job"
          replacement: "kubelet"
    # Not by most graphs or often useful
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    prometheus-node-exporter:
      extraArgs:
      - --collector.disable-defaults
      - --collector.cpu
      - --collector.meminfo
    # Remove high cardinality apiserver metrics
    kubeApiServer:
      spec:
        endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: https
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            serverName: kubernetes
          metricRelabelConfigs:
          - sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
            action: drop
          - sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
            action: drop
