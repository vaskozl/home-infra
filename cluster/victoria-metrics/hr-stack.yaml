apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vm
  namespace: victoria-metrics
spec:
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: '0.61.6'
      sourceRef:
        kind: HelmRepository
        name: vm-charts
        namespace: flux-system
  interval: 1h0m0s
  targetNamespace: victoria-metrics
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  valuesFrom:
    - kind: Secret
      name: vm-secrets
  values:
    fullnameOverride: stack
    experimentalDashboardsEnabled: false
    grafana:
      image:
        registry: ghcr.io
        repository: vaskozl/grafana
        tag: 12.2.0@sha256:a5314c859b722dcfad34902d72b09b3d2643c8b09d5371fe86026444b3f8c3fc
      ingress:
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Server Monitoring Dashboards
          gethomepage.dev/group: Monitoring
          gethomepage.dev/icon: grafana
          gethomepage.dev/name: Grafana
          gethomepage.dev/pod-selector: "app.kubernetes.io/name=grafana"
        hosts:
          - gf.sko.ai
      sidecar:
        image:
          registry: ghcr.io
          repository: vaskozl/k8s-sidecar
          tag: 1.30.10@sha256:ef274dffb24e36f4bcd72d7883524567549a7c7c5c3f7aa2e89c8581fff01c6e
        dashboards:
          enabled: true
          label: grafana_dashboard
          searchNamespace: ALL
      grafana.ini:
        auth.anonymous:
          enabled: true
          org_role: Editor
    alertmanager:
      ingress:
        enabled: true
        hosts:
          - am.sko.ai
      spec:
        externalURL: "https://am.sko.ai"
        image:
          repository: ghcr.io/vaskozl/prometheus-alertmanager
          tag: 0.28.1@sha256:c108d3aed26d23fb99898468dc7486920d17fe7addb4e7a5df8a28e8f806c106
      config:
        route:
          routes:
            - matchers:
                - alertname=~"WatchDog|InfoInhibitor|KubeMemoryOvercommit"
              receiver: 'blackhole'
            - matchers:
                - severity=~"warning|critical"
              receiver: mail-monitoring
        receivers:
          - name: 'blackhole'
          - name: "mail-monitoring"
            email_configs:
              - to: alertmanager@sko.ai
                from: alertmanager@sko.ai
                hello: am.sko.ai
                smarthost: 'mx-maddy.mailserver.svc.cluster.local:2225'
                tls_config:
                  insecure_skip_verify: true
                send_resolved: true
                headers:
                  Subject: >
                    {{ if eq .Status "resolved" }}ðŸ‘Œ{{ end }} {{ if eq .Status "firing" }}ðŸš¨{{ end }} {{ index .CommonLabels.alertname
                    }}

                text: >
                  {{ range .Alerts }} {{ index .Annotations.description }} {{- end }}

                html: ''
    vmsingle:
      spec:
        retentionPeriod: "3"
        storage:
          resources:
            requests:
              storage: 22Gi
        resources:
          limits:
            memory: 1.2Gi
          requests:
            cpu: 530m
            memory: 1.2Gi
      ingress:
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Server Metrics
          gethomepage.dev/group: Monitoring
          gethomepage.dev/icon: victoriametrics
          gethomepage.dev/name: VictoriaMetrics
          gethomepage.dev/pod-selector: "app.kubernetes.io/name=vmsingle"
        hosts:
          - vm.sko.ai
    vmalert:
      ingress:
        enabled: true
        hosts:
          - va.sko.ai
    vmagent:
      spec:
        inlineScrapeConfig: |
          - job_name: "syno"
            static_configs:
            - targets: ["syno:9100"]
          - job_name: "pinewall"
            static_configs:
            - targets: ["pinewall:9100"]
          - job_name: "blocky"
            static_configs:
            - targets: ["pinewall:4000"]
        externalLabels:
          cluster: pi-cluster
        resources:
          limits:
            cpu: 1
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 100Mi
      ingress:
        enabled: true
        hosts:
          - vma.sko.ai
    kubelet:
      vmScrape:
        spec:
          # drop high cardinality label and useless metrics for cadvisor and kubelet
          metricRelabelConfigs:
            # Drop less useful container CPU metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
            # Drop less useful / always zero container memory metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: 'container_memory_(failures_total|mapped_file|swap)'
            # Drop less useful container process metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: 'container_(file_descriptors|tasks_state|threads_max)'
            # Drop less useful container filesystem metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
            # Drop less useful container blkio metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: 'container_blkio_device_usage_total'
            # Drop container spec metrics that overlap with kube-state-metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: 'container_spec.*'
            # Drop cgroup metrics with no pod.
            - sourceLabels: [id, pod]
              action: drop
              regex: '.+;'
            - action: drop
              sourceLabels: [__name__]
              regex: prober_probe_duration_seconds_bucket
            # Drop high-cardinality labels.
            - action: labeldrop
              regex: (uid|id|name|pod_uid|interface)
            - action: drop
              sourceLabels: [__name__]
              regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    # Not by most graphs or often useful
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeApiServer:
      enabled: false
    prometheus-node-exporter:
      extraArgs:
        - --collector.disable-defaults
        - --collector.uname
        - --collector.cpu
        - --collector.meminfo
        - --collector.nfs
