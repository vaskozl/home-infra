# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  annotations:
    patch.sko.ai/app-template: common
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 4.2.0
  values:
    controllers:
      lidarr:
        containers:
          app:
            image:
              repository: ghcr.io/vaskozl/lidarr
              tag: 2.12.4@sha256:957fc3c54debb6c6059b489d6cb01b54fda6c1608e2d448a2cc58b16185167a7
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 150m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              readOnlyRootFilesystem: true
          api:
            image:
              repository: ghcr.io/vaskozl/nginx
              tag: 1.29.1@sha256:33e296d79c189013a4401841bc993d7c6b72766ab115dde0c690ea34b91bd7ab
            resources:
              limits:
                memory: 30Mi
              requests:
                cpu: 15m
                memory: 30Mi
            securityContext:
              readOnlyRootFilesystem: false
              runAsUser: 33
              runAsGroup: 33
        statefulset:
          podManagementPolicy: Parallel
          volumeClaimTemplates:
            - accessMode: ReadWriteOnce
              globalMounts:
                - path: /config
              name: config
              size: 1Mi
        type: statefulset
    defaultPodOptions:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "api.lidarr.audio"
      securityContext:
        fsGroup: 568
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
        sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
    ingress:
      app:
        hosts:
          - host: lidarr.sko.ai
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      tmp:
        type: emptyDir
      torrents:
        existingClaim: torrents-v2
      api-tls:
        name: api-lidarr-audio-tls
        type: secret
        globalMounts:
          - path: /etc/ssl/certs/lidarr.pem
            subPath: tls.crt
          - path: /etc/nginx/ssl
      nginx:
        name: lidarr-nginx
        type: configMap
        globalMounts:
          - path: /etc/nginx/nginx.conf
            subPath: nginx.conf
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: 8686
