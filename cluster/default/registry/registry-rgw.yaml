apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: registry-rgw
  annotations:
    kubernetes.io/ingress.class: "internal"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/enable-global-auth: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      allow 192.168.1.0/24;
      allow 10.0.0.0/8;
      deny all;
spec:
  rules:
  - host: r3.sko.ai
    http:
      paths:
      - backend:
          serviceName: registry-rgw
          servicePort: 5000
        path: /.+
      - backend:
          serviceName: reg-rgw
          servicePort: 8080
        path: /
      - backend:
          serviceName: reg-rgw
          servicePort: 8080
        path: /(repo|static)
  tls:
  - hosts:
    - r3.sko.ai
---
apiVersion: v1
kind: Service
metadata:
  name: registry-rgw
spec:
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  selector:
    app: registry-rgw
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-rgw
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-rgw
  template:
    metadata:
      labels:
        app: registry-rgw
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - registry-rgw
              topologyKey: "kubernetes.io/hostname"
      containers:
      - image: registry:2.7.1
        name: registry-rgw
        env:
        - name: REGISTRY_STORAGE
          value: "s3"
        - name: REGISTRY_STORAGE_REDIRECT_DISABLE
          value: "true"
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        - name: REGISTRY_HTTP_ADDR
          value: '0.0.0.0:5000'
        - name: REGISTRY_STORAGE_S3_SECURE
          value: "false"
        - name: REGISTRY_STORAGE_S3_ROOTDIRECTORY
          value: "registry"
        - name: REGISTRY_STORAGE_S3_REGION
          valueFrom:
            configMapKeyRef:
              name: ceph-bucket
              key: BUCKET_REGION
        - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
          valueFrom:
            configMapKeyRef:
              name: ceph-bucket
              key: BUCKET_HOST
        - name: REGISTRY_STORAGE_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: ceph-bucket
              key: BUCKET_NAME
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: ceph-bucket
              key: AWS_ACCESS_KEY_ID
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: ceph-bucket
              key: AWS_SECRET_ACCESS_KEY
        ports:
        - containerPort: 5000
          name: registry
